      name: uppanel
      image: /local/custom_ui/floorplan/floorplan2.svg
      stylesheet: /local/custom_ui/floorplan/floorplan2.css
      
      # These options are optional
      # warnings:                  # enable warnings (to find out why things might ot be working correctly)
      pan_zoom:                  # enable experimental panning / zooming
      hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text
      
      last_motion_entity: sensor.template_last_motion
      last_motion_class: last-motion

      groups:

        - name: Sensors
          entities:
             -  sensor.dark_sky_temperature
          #text_template: '${entity.state ? entity.state : "unknown"}'
          # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
          text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}'  
          class_template: '
            var temp = parseFloat(entity.state.replace("Â°", ""));
            if (temp < 10)
              return "temp-low";
            else if (temp < 30)
              return "temp-medium";
            else
              return "temp-high";
            '

        - name: Lights
          entities:
            - light.60019495eaf2_1921681133
          states:
            - state: 'on'
              class: 'light-on'
            - state: 'off'
              class: 'light-off'
          action:
            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        - name: Switches
          entities:
             - switch.rfone
          states:
            - state: 'on'
              class: 'lights-on'
            - state: 'off'
              class: 'lights-off'
          action:
            domain: switch
            service: toggle

        - name: Media Players
          entities:
            - media_player.softsqueeze
            - media_player.kitchen
            - media_player.moto
          states:
            - state: 'off'
              class: 'squeezebox-off'
            - state: 'idle'
              class: 'squeezebox-off'
            - state: 'paused'
              class: 'squeezebox-off'
            - state: 'playing'
              class: 'squeezebox-on'
          action:
            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        - name: Binary sensors
          entities:
            - binary_sensor.front_hallway
            - binary_sensor.kitchen
            - binary_sensor.master_bedroom
            - binary_sensor.theatre_room
          states:
            - state: 'off'
              class: 'info-background'
            - state: 'on'
              class: 'warning-background'
          state_transitions:
            - name: On to off
              from_state: 'on'
              to_state: 'off'
              duration: 10

        - name: Cameras
          entities:
            - camera.ip_webcam
            - camera.ip_webcam_2
            - camera.ip_webcam_3
          states:
            - state: 'idle'
              class: 'camera-idle'
              
        - name: thermostat_temp
          entities:
            - sensor.bathroom_temp
            - sensor.sn1_temperature
          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

        #- name: text_states
          #entities:
           # - sensor.bathroom_temp
            #- sensor.dark_sky_temperature
            #- sensor.sn1_temperature
         # text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
